DROP ALL

# Vertices

## Basic CPG vertex
CREATE VERTEX CPG_VERT (
    PRIMARY_ID id INT,
    label STRING DEFAULT "UNKNOWN",
    argumentIndex INT DEFAULT -1,
    dispatchType STRING DEFAULT "STATIC_DISPATCH",
    evaluationStrategy STRING DEFAULT "BY_REFERENCE",
    methodFullName STRING DEFAULT "null",
    methodInstFullName STRING DEFAULT "null",
    typeFullName STRING DEFAULT "null",
    typeDeclFullName STRING DEFAULT "null",
    dynamicTypeHintFullName STRING DEFAULT "null",
    code STRING DEFAULT "null",
    columnNumber INT DEFAULT -1,
    lineNumber INT DEFAULT -1,
    name STRING DEFAULT "null",
    fullName STRING DEFAULT "null",
    canonicalName STRING DEFAULT "null",
    astOrder INT DEFAULT -1,
    signature STRING DEFAULT "()"
)
## Language Dependent
CREATE VERTEX META_DATA_VERT (
    PRIMARY_ID id INT,
    label STRING DEFAULT "META_DATA",
    language STRING DEFAULT "JAVA",
    version STRING DEFAULT "1.8"
)

# Edges

CREATE DIRECTED EDGE AST (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_AST"
CREATE DIRECTED EDGE CFG (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_CFG"
CREATE DIRECTED EDGE CAPTURED_BY (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_CAPTURED_BY"
CREATE DIRECTED EDGE BINDS_TO (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_BINDS_TO"
CREATE DIRECTED EDGE REF (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_REF"
CREATE DIRECTED EDGE RECEIVER (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_RECEIVER"
CREATE DIRECTED EDGE CONDITION (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_CONDITION"
CREATE DIRECTED EDGE BINDS (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_BINDS"
CREATE DIRECTED EDGE ARGUMENT (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_ARGUMENT"
CREATE DIRECTED EDGE SOURCE_FILE (FROM CPG_VERT, TO CPG_VERT) WITH REVERSE_EDGE="REVERSE_SOURCE_FILE"

CREATE GRAPH cpg (*)

CREATE QUERY areVerticesJoinedByEdge(VERTEX vFrom, VERTEX vTo, STRING edgeLabel) FOR GRAPH cpg {
  bool result;
  setFrom = {ANY};
  temp = SELECT tgt
          FROM setFrom:src -(:e)- :tgt
          WHERE src == vFrom
            AND tgt == vTo
            AND e.type == edgeLabel;
  result = (temp.size() > 0);
  PRINT result;
}

CREATE QUERY maxOrder() FOR GRAPH cpg {
  MaxAccum<INT> @@maxAstOrder;
  @@maxAstOrder += 0;
  start = {ANY};
  result = SELECT s
           FROM start:s
           ACCUM @@maxAstOrder += s.astOrder;
  PRINT @@maxAstOrder;
}

INSTALL QUERY ALL
